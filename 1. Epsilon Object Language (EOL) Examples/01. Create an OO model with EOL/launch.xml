<?xml version="1.0" encoding="UTF-8"?>
<!--
	The provided build script illustrates how to launch the example using Apache Ant.
	Ensure that the External Tools Configuration specifies the Java Runtime Environment (JRE) to be 
	used as the same as the workspace.
		1) Click "External Tools Configurationâ€¦" from the "External Tools" dropdown.
		2) Select the Ant build for this build script.
		3) Click the "JRE" tab.
		4) Select the option that reads: "Run in the same JRE as the workspace."
		5) Click "Apply."
		6) Click "Run."
-->
<!--
	Apache Ant, in terms of concrete syntax, employs an XML-based approach.
	For instance, consider the following ANT project: it features a target named "main," which is 
	also designated as the default target.
-->
<project name="Build_OO_Instance" default="main" basedir=".">
	<property name="ant.file" value="${basedir}/launch.xml"/>
	<property name="ant.project.name" value="Build_OO_Instance"/>
	<property name="ant.project.default.target" value="main"/>
	<property name="ant.project.default.target.description" 
		value="Build an object-oriented instance model."/>
	<property name="ant.project.description" 
		value="This project uses the Epsilon Object Language (EOL) to build an object-oriented 
			instance model."/>
	<!--
	-->
	<target name="loadModels">
		<!-- Register `OO.ecore` as the Ecore metamodel used in this example. -->
		<epsilon.emf.register file="../00. Ecore metamodels/OO.ecore"/>
		<epsilon.emf.loadModel name="OO" modelFile="models/OO_Instance.model" metamodelUri="OO" 
			read="false" store="true"/>
	</target>
	<target name="main" depends="loadModels">
		<epsilon.eol src="Build_OO_Instance.eol">
			<model ref="OO"/>
		</epsilon.eol>
	</target>
</project>