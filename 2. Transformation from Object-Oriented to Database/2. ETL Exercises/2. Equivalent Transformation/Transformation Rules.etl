pre {
	
	"\tRunning ETL…\n".println();
	var database : new DB!Database;
	
}

post {
	
	"\tAdjusting Foreign Keys…\n".println();
	var tables : Sequence; var foreignkeys : Sequence;
	for (content in database.contents) {
		
		if (content.type().name = "Table") {
			
			tables.add(content);
			
		}
		
		else if (content.type().name = "ForeignKey") {
			
			foreignkeys.add(content);
			
		}
		
	}
	
	for (foreignkey_temp in foreignkeys) {
		
		for (table_temp in tables) {
			
			if (table_temp.name = foreignkey_temp.parent.name) {
				
				var col_temp = foreignkey_temp.parent;
				foreignkey_temp.parent = table_temp.primaryKeys.first();
				foreignkey_temp.child.type = foreignkey_temp.parent.type;
				delete col_temp;
				
			}
			
		}
		
	}
	
	"Done.\n".println();
	
}

rule Class_to_Table
	transform class : OO!Class
	to table : DB!Table {
	
	var column : new DB!Column;
	column.database = database;
	column.table = table;
	column.name = class.name.toLowerCase() + "_id";
	column.type = "Integer";
	table.columns.add(column);
	
	table.database = database;
	table.name = class.name;
	table.primaryKeys.add(column);
	
	for (f in class.features) {
	
		if (f.type().name = "Attribute") {
						
			var column : new DB!Column;
			column.database = database;
			column.table = table;
			column.name = f.name;
			column.type = f.type.name;
			table.columns.add(column);
			
		}
		
		else if (f.type().name = "Reference") {
			
			var column : new DB!Column;
			column.database = database;
			column.table = table;
			column.name = f.name.toLowerCase() + "_id (ForeignKey)";	
			column.type = "";
			table.columns.add(column);
			
			var foreignkey : new DB!ForeignKey;
			foreignkey.database = database;
			foreignkey.name = f.name.toLowerCase() + "_id";
			foreignkey.child = column;
			foreignkey.isMany = f.isMany;
			
			var col_temp : new DB!Column;
			col_temp.name = f.type.name;
			foreignkey.parent = col_temp;
			
			f.name.println("Reference's feature: ");
			f.owner.name.println("Reference's owner: ");
			f.type.name.println("Reference's type: ");
			"".println;
			
		}
		
	}
	
}