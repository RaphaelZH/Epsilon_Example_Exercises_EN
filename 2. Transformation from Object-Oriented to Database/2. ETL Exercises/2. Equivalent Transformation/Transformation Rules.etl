pre {
	
	"Running ETLâ€¦\n".println();
	var database : new DB!Database;
	
}

rule Class_to_Table
	transform class : OO!Class
	to table : DB!Table {
	
	var column : new DB!Column;
	column.database = database;
	column.table = table;
	column.name = class.name.toLowerCase() + "_id";
	column.type = "Integer";
	table.columns.add(column);
	
	table.database = database;
	table.name = class.name;
	table.primaryKeys.add(column);
	
	for (f in class.features) {
		
		class.name.println("======     ");
		f.println("-----   ");
	
		if (f.type().name = "Attribute") {
						
			var column : new DB!Column;
			column.database = database;
			column.table = table;
			column.name = f.name;
			column.type = f.type.name;
			table.columns.add(column);
			
		}
		
		else if (f.type().name = "Reference") {
			
			var column : new DB!Column;
			column.database = database;
			column.table = table;
			column.name = f.name.toLowerCase() + "_id (ForeignKey)";	
			column.type = "";
			table.columns.add(column);
			
			
			var foreignkey : new DB!ForeignKey;
			
			foreignkey.database = database;
			foreignkey.name = f.name.toLowerCase() + "_id";
			foreignkey.child = column;
			foreignkey.isMany = f.isMany;
			
			var col_temp : new DB!Column;
			col_temp.name = f.type.name;
			
			foreignkey.parent = col_temp;
			
			f.name.println("feature: ");
			f.owner.name.println("owner: ");
			f.type.name.println("type: ");
			
			//for (c in package.contents) {
			
			//	c.name.println("class name: ");
			
			
			//}
			
			
			//foreignkey.type.println("type");
			
		}
		
	}
	
	
	for (t in table) {
	
		for (col in t.columns) {
		
			if (col.type = "") {
				
				col.name.println("///");
				
				t.database.contents.last().println("...");
				
				for (t_check in table) {
				
					t_check.primaryKeys.first().name.println("mmm ");
					
					t.database.contents.last().name.println("kkk ");
				
					if (t.database.contents.last().name = t_check.primaryKeys.first().name) {
					
						t_check.primaryKeys.println("jjjj ");
					
					}
				
				}
			
			}
			
			
		}
		
	}
}


